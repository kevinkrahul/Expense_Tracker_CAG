version: "3.9"

services:
  backend:
    build:
      context: ./Expense_backend
      dockerfile: Dockerfile
    container_name: backend
    restart: always
    ports:
      - "${BACKEND_PORT}:8000"
    depends_on:
      - db
    environment:
      - PG_HOST=${PG_HOST}
      - PG_PORT=${PG_PORT}
      - PG_DATABASE=${PG_DATABASE}
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}

    networks:
      - app-network

  frontend:
    build:
      context: ./Expense_frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: always
    ports:
      - "${FRONTEND_PORT}:3000"
    depends_on:
      - backend
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    networks:
      - app-network

  db:
    image: postgres:latest
    container_name: postgres
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: ${PG_DATABASE}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
